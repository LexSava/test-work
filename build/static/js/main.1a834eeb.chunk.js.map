{"version":3,"sources":["store/User.tsx","components/Main/Main.tsx","components/Modal/Modal.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["name","surname","displayModalWindow","makeAutoObservable","this","enteredName","enteredSurname","length","Main","props","event","User","getName","target","value","getSurname","className","onSubmit","preventDefault","placeholder","type","onChange","onInput","required","onClick","openModalWindow","Modal","observer","closeModalWindow","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8QAuBe,M,WAlBb,aAAe,yBAHfA,KAAe,GAGD,KAFdC,QAAkB,GAEJ,KADdC,oBAA8B,EAE5BC,YAAmBC,M,2CAErB,SAAQC,GACND,KAAKJ,KAAOK,I,wBAEd,SAAWC,GACTF,KAAKH,QAAUK,I,6BAEjB,WAC8B,IAAxBF,KAAKH,QAAQM,QAAqC,IAArBH,KAAKJ,KAAKO,SACzCH,KAAKF,oBAAqB,K,8BAG9B,WACEE,KAAKF,oBAAqB,M,aC+BfM,EA9CuB,SAACC,GACrC,IAAMJ,EAAc,SAACK,GACnBC,EAAKC,QAAQF,EAAMG,OAAOC,QAEtBR,EAAiB,SAACI,GACtBC,EAAKI,WAAWL,EAAMG,OAAOC,QAO/B,OACE,gCACE,8HACA,2KACA,uBAAME,UAAU,WAAWC,SARV,SAACP,GACpBA,EAAMQ,kBAOJ,UACE,uBACEC,YAAY,uBACZC,KAAK,OACLpB,KAAK,OACLqB,SAAUhB,EACViB,QAASjB,EACTkB,UAAQ,IAGV,uBACEJ,YAAY,+CACZC,KAAK,OACLpB,KAAK,UACLqB,SAAUf,EACVgB,QAAShB,EACTiB,UAAQ,IAGV,wBACEC,QAAS,WACPb,EAAKc,mBAFT,yD,eCXOC,EAvByBC,aAAS,WAC/C,OAAgC,IAA5BhB,EAAKT,mBAEL,qBAAKc,UAAU,eAAf,SACE,sBAAKA,UAAU,cAAf,UACE,qBAAKA,UAAU,YAAf,6FACoBL,EAAKX,KAAO,IAAMW,EAAKV,QAD3C,OAGA,qBAAKe,UAAU,cAAf,SACE,wBACEQ,QAAS,WACPb,EAAKiB,oBAFT,+DAYH,qBAAKZ,UAAU,QCdTa,MATf,WACE,OACE,sBAAKb,UAAU,MAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,QCMSc,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.1a834eeb.chunk.js","sourcesContent":["import { makeAutoObservable } from \"mobx\";\r\nclass User {\r\n  name: string = \"\";\r\n  surname: string = \"\";\r\n  displayModalWindow: boolean = false;\r\n  constructor() {\r\n    makeAutoObservable(this);\r\n  }\r\n  getName(enteredName: string) {\r\n    this.name = enteredName;\r\n  }\r\n  getSurname(enteredSurname: string) {\r\n    this.surname = enteredSurname;\r\n  }\r\n  openModalWindow() {\r\n    if (this.surname.length !== 0 && this.name.length !== 0) {\r\n      this.displayModalWindow = true;\r\n    }\r\n  }\r\n  closeModalWindow() {\r\n    this.displayModalWindow = false;\r\n  }\r\n}\r\nexport default new User();\r\n","import \"./Main.scss\";\r\nimport React from \"react\";\r\nimport User from \"../../store/User\";\r\ninterface InterfaceMain {}\r\n\r\nconst Main: React.FC<InterfaceMain> = (props) => {\r\n  const enteredName = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    User.getName(event.target.value);\r\n  };\r\n  const enteredSurname = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    User.getSurname(event.target.value);\r\n  };\r\n\r\n  const handleSubmit = (event: any) => {\r\n    event.preventDefault();\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Добро пожаловать.</h1>\r\n      <h2>Введите свое имя и фамилию.</h2>\r\n      <form className=\"formMain\" onSubmit={handleSubmit}>\r\n        <input\r\n          placeholder=\"Имя: \"\r\n          type=\"text\"\r\n          name=\"name\"\r\n          onChange={enteredName}\r\n          onInput={enteredName}\r\n          required\r\n        />\r\n\r\n        <input\r\n          placeholder=\"Фамилия: \"\r\n          type=\"text\"\r\n          name=\"surname\"\r\n          onChange={enteredSurname}\r\n          onInput={enteredSurname}\r\n          required\r\n        />\r\n\r\n        <button\r\n          onClick={() => {\r\n            User.openModalWindow();\r\n          }}\r\n        >\r\n          Готово\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\nexport default Main;\r\n","import \"./Modal.scss\";\r\nimport React from \"react\";\r\nimport User from \"../../store/User\";\r\nimport { observer } from \"mobx-react-lite\";\r\ninterface InterfaceModal {}\r\n\r\nconst Modal: React.FC<InterfaceModal> = observer(() => {\r\n  if (User.displayModalWindow === true) {\r\n    return (\r\n      <div className=\"madalOverlay\">\r\n        <div className=\"modalWindow\">\r\n          <div className=\"modalBody\">\r\n            {`Здравствуйте, ${User.name + \" \" + User.surname}.`}\r\n          </div>\r\n          <div className=\"modalFooter\">\r\n            <button\r\n              onClick={() => {\r\n                User.closeModalWindow();\r\n              }}\r\n            >\r\n              Закрыть\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  return <div className=\"\"></div>;\r\n});\r\nexport default Modal;\r\n","import React from \"react\";\nimport \"./App.scss\";\nimport Main from \"./components/Main/Main\";\nimport Modal from \"./components/Modal/Modal\";\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Main />\n      <Modal />\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}